name: Build, test and analyze

on:
  pull_request:
    branches: [ master ]
  workflow_call:

jobs:

  # Run linter to ensure new code respect coding rules
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Setup metrics
        run: npm ci
      - name: Check contributions requirements
        run: npm run test-contrib
        env:
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
      - name: Run linter
        run: npm run linter

  # Build docker image from branch and run tests
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Format code with dprint
        run: |
          npm install -g dprint
          mkdir -v -p /home/runner/.cache/dprint/cache
          npx dprint fmt --config .github/config/dprint.json
      - name: Build gh-metrics/metrics:${{ github.head_ref || 'master' }}
        env:
          GIT_REF: ${{ github.head_ref || 'master' }}
        run: docker build -t gh-metrics/metrics:$(echo $GIT_REF | sed 's/[^a-z]/-/g') .
      - name: Run tests
        env:
          GIT_REF: ${{ github.head_ref || 'master' }}
        run: docker run --rm --entrypoint="" gh-metrics/metrics:$(echo $GIT_REF | sed 's/[^a-z]/-/g') npm run test-metrics
